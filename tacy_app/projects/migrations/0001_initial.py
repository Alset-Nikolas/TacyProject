# Generated by Django 4.1.2 on 2022-11-27 21:22

from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IntermediateDateProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField(help_text='Введите промежуточную дату проекта', verbose_name='Промежуточная дата')),
            ],
            options={
                'db_table': 'project_intermediate_dates',
            },
        ),
        migrations.CreateModel(
            name='MetricsProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название метрики', max_length=200, verbose_name='Метрика проекта')),
                ('value', models.FloatField(default=0, help_text='Введите текущий эффект', verbose_name='Значение метрики, текущее у проекта')),
                ('target_value', models.FloatField(help_text='Введите целевой эффект', verbose_name='Значение метрики, которон мы ждем от итога проекта')),
                ('units', models.CharField(help_text='Введите единицы измерения метрики', max_length=200, verbose_name='Единицы измерения метрики')),
                ('active', models.BooleanField()),
                ('initiative_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'project_metrics',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название проекта', max_length=300, verbose_name='Название проекта')),
                ('date_start', models.DateField(help_text='Введите дату начала проекта', verbose_name='Дата начала')),
                ('date_end', models.DateField(help_text='Введите дату окончания проекта', verbose_name='Дата окончания')),
                ('purpose', models.TextField(default='Мои цели на этот проект', verbose_name='Цель проекта')),
                ('tasks', models.TextField(default='Мои задачи на этот проект', verbose_name='Задачи проекта')),
                ('description', models.TextField(default='Мои цели на этот проект', verbose_name='Описание проекта')),
                ('files', models.FileField(null=True, upload_to=projects.models.directory_path)),
            ],
            options={
                'db_table': 'projects_tb',
            },
        ),
        migrations.CreateModel(
            name='ProjectStages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_stage', models.CharField(max_length=200)),
                ('date_start', models.DateField(help_text='Введите дату начала этапа', verbose_name='Дата начала этапа')),
                ('date_end', models.DateField(help_text='Введите дату конца этапа', verbose_name='Дата конца этапа')),
            ],
            options={
                'db_table': 'stages_project',
            },
        ),
        migrations.CreateModel(
            name='PropertiesItemsProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Введите возможное значение свойства', max_length=200, verbose_name='Значение свойства')),
            ],
            options={
                'db_table': 'properties_item',
            },
        ),
        migrations.CreateModel(
            name='PropertiesProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название свойства', max_length=200, verbose_name='Название свойства')),
                ('initiative_activate', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'project_properties',
            },
        ),
        migrations.CreateModel(
            name='PropertiesСommunityProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'propert_community_tb',
            },
        ),
        migrations.CreateModel(
            name='RightsUserBool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_create', models.BooleanField(default=False)),
                ('is_coordinate', models.BooleanField(default=False)),
                ('is_watch', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user_rights_bool_tb',
            },
        ),
        migrations.CreateModel(
            name='RightsUSerInProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'rights_project_tb',
            },
        ),
        migrations.CreateModel(
            name='RolesUserInProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('coverage', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'roles_project_tb',
            },
        ),
        migrations.CreateModel(
            name='СommunityProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_info', to='projects.project')),
                ('rights_user', models.ManyToManyField(to='projects.rightsuserinproject')),
                ('role_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.rolesuserinproject')),
            ],
            options={
                'db_table': 'community_tb',
            },
        ),
    ]
